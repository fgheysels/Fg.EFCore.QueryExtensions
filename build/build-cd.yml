name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/*

variables:
- name: Build.Configuration
  value: 'Release'

stages:
  - stage: Build
    jobs:
      - job: Compile_and_test
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DotNetCoreCLI@2
            displayName: 'Build EFCore.QueryExtensions solution'
            inputs:
              projects: 'src/Fg.EFCore.QueryExtensions.sln'
              arguments: --configuration $(Build.Configuration)
          - task: DotNetCoreCLI@2
            displayName: 'Run unittests'
            inputs:
              command: 'test'
              projects: 'src/Fg.EFCore.QueryExtensions.Tests/*.csproj'
              testRunTitle: 'EFCore.QueryExtensions unittests' 
  - stage: Release
    jobs:
      - job: Package_and_push
        pool:
          vmImage: 'ubuntu-16.04'  
        steps:
          - task: DotNetCoreCLI@2
            displayName: Package nuget Package
            inputs:
              command: 'pack'
              includesymbols: true
              includesource: true
              projects: 'src/Fg.EFCore.QueryExtensions/*.csproj'
              arguments: --configuration $(Build.Configuration) --output $(Build.StagingDirectory)/nupkg/
          - task: PublishPipelineArtifact@1
            displayName: 'Publish artifact'
            inputs:
              targetPath: '$(Build.StagingDirectory)'
              artifact: 'artefact'
          - task: NuGetCommand@2
            displayName: 'Push to NuGet.org'
            inputs:
              command: push
              packagesToPush: '$(Build.StagingDirectory)/nupkg/*.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'nuget-push'